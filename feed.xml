<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://mikemorenodsp.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mikemorenodsp.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-29T19:53:03+00:00</updated><id>https://mikemorenodsp.github.io/feed.xml</id><title type="html">Mike Moreno DSP</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">macOS UX for Windows</title><link href="https://mikemorenodsp.github.io/posts/macos-ux-for-windows/" rel="alternate" type="text/html" title="macOS UX for Windows"/><published>2024-07-07T00:00:00+00:00</published><updated>2024-07-07T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/macos-ux-for-windows</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/macos-ux-for-windows/"><![CDATA[<div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/macOS-UX-for-Windows-480.webp 480w,/assets/img/posts/macOS-UX-for-Windows-800.webp 800w,/assets/img/posts/macOS-UX-for-Windows-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/macOS-UX-for-Windows.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="table-of-contents">Table of Contents</h3> <ul> <li><a href="#applications">Applications</a></li> <li><a href="#audio-apps">Audio Apps</a></li> <li><a href="#windows-settings">Windows Settings</a></li> <li><a href="#other-useful-apps">Other useful Apps</a></li> </ul> <hr/> <p>I recently switched from an old 2012 MacBook to a ThinkPad e14 and felt the whiplash of Windows UX: bloatware, unintuitive shortcuts, etc.</p> <p>So without further ado, here are some FOSS apps, utilities and settings to make Windows UX more like macOS.</p> <blockquote> <p><em>Note: some of these are GitHub links, so if you want to install them click on ‚ÄúReleases‚Äù and then look for the installer under ‚ÄúAssets‚Äù</em></p> </blockquote> <h2 id="applications"><a href="#applications">Applications</a></h2> <p>These apps are good enough to bring some key aspects of the macOS user experience to Windows.</p> <table> <thead> <tr> <th>Alternative to</th> <th>App Title (Link)</th> <th>Description</th> <th>Native alternative</th> </tr> </thead> <tbody> <tr> <td>üîç Spotlight</td> <td><a href="https://aka.ms/getPowertoys">Power Toys</a></td> <td>Power Toys does not only contain a Spotlight alternative, but also many other helpful modules like: FancyZones to create custom window layouts, Keyboard Manager to Remap shortcuts and keys.</td> <td>Use <code class="language-plaintext highlighter-rouge">Windows + S</code> to open ‚ÄúSearch‚Äù.</td> </tr> <tr> <td>üëÅÔ∏è‚Äçüó®Ô∏è Space bar Preview</td> <td><a href="https://www.microsoft.com/store/apps/9nv4bs3l1h4s">Quick Look</a></td> <td>Bring macOS ‚ÄúQuick Look‚Äù feature to Windows.</td> <td>Use <code class="language-plaintext highlighter-rouge">Alt + P</code> to show the Preview Pane.</td> </tr> <tr> <td>üì¶ Double-click to decompress</td> <td><a href="https://7-zip.org/">7zip</a> &amp; <a href="https://telcontar.net/Software/7-ade/">7-ade</a></td> <td>7-ade provides double-click expansion of archives into the directory containing the archive.</td> <td>Right click &gt; Extract All‚Ä¶</td> </tr> <tr> <td>‚Ü™ macOS Alt + Tab</td> <td><a href="https://github.com/hdlx/MacAppSwitcher">MacAppSwitcher</a></td> <td>This program brings MacOS-like application switching to Windows.</td> <td>Use <code class="language-plaintext highlighter-rouge">Windows + T</code> to toggle between apps.</td> </tr> <tr> <td>üóÇÔ∏è Folder color</td> <td><a href="https://github.com/kweatherman/Folcolor">Folcolor</a></td> <td>Windows explorer folder coloring utility.</td> <td>Manually change the folder‚Äôs icon. Suggestion: Download icons from <a href="https://fonts.google.com/icons">Google Icons</a> and convert them to .ico using <a href="https://www.gimp.org/">GIMP</a>.</td> </tr> <tr> <td>üìÑ Preview</td> <td><a href="https://okular.kde.org/">Okular</a></td> <td>Read PDF documents, comics and EPub books, visualize Markdown documents, and much more.</td> <td>Microsoft Edge</td> </tr> <tr> <td>üìñ Apple Books</td> <td><a href="https://calibre-ebook.com/">Calibre</a></td> <td>E-book library management application made by users, for users.</td> <td>None</td> </tr> <tr> <td>üìü macOS Terminal</td> <td><a href="https://learn.microsoft.com/en-us/windows/wsl/install">WSL (Windows Subsystem for Linux)</a></td> <td>Use Linux applications, utilities, and Bash command-line tools directly on Windows.</td> <td>Windows Terminal</td> </tr> <tr> <td>üëå Three Finger Drag</td> <td><a href="https://github.com/ClementGre/ThreeFingersDragOnWindows">Three Finger Drag On Windows</a></td> <td>Enables macOS-style three-finger dragging functionality on Windows Precision touchpads.</td> <td>None</td> </tr> <tr> <td>üéûÔ∏è QuickTime Player</td> <td><a href="https://www.videolan.org/vlc/">VLC</a></td> <td>Cross-platform multimedia player supporting multiple video and audio formats.</td> <td>Windows Media Player</td> </tr> <tr> <td>üïµüèª‚Äç‚ôÇÔ∏è Zoom accessibility</td> <td><a href="https://learn.microsoft.com/en-us/sysinternals/downloads/zoomit">ZoomIt</a></td> <td>ZoomIt is a screen zoom, annotation, and recording tool for technical presentations and demos.</td> <td>‚ÄúMagnifier‚Äù - Use <code class="language-plaintext highlighter-rouge">Windows + Plus</code> to turn on, <code class="language-plaintext highlighter-rouge">Ctrl + Alt + Mouse Wheel</code> to zoom in/out, <code class="language-plaintext highlighter-rouge">Windows + Esc</code> to turn it off.</td> </tr> </tbody> </table> <p></p> <h2 id="audio-apps"><a href="#audio-apps">Audio Apps</a></h2> <p>These are mainly audio drivers that could help with the latency and performance for audio apps.</p> <table> <thead> <tr> <th>Alternative to</th> <th>App Title (Link)</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>Audio driver</td> <td><a href="https://github.com/dechamps/FlexASIO">FlexASIO</a> &amp; <a href="https://github.com/flipswitchingmonkey/FlexASIO_GUI">FlexASIO GUI</a></td> <td>A flexible universal ASIO driver that uses the PortAudio sound I/O library.</td> </tr> <tr> <td>Audio driver</td> <td><a href="https://github.com/koord-live/KoordASIO">KoordASIO</a></td> <td>FlexASIO derivative that focuses on WASAPI and user convenience.</td> </tr> <tr> <td>Audio driver</td> <td><a href="https://www.asio4all.org/">ASIO4ALL</a></td> <td>Note: I would only recommend this option to use its aggregate audio device option. Other than that, it‚Äôs not that great or intuitive.</td> </tr> <tr> <td><a href="https://github.com/ExistentialAudio/BlackHole">BlackHole</a></td> <td><a href="https://vb-audio.com/Cable/index.htm">VB Cable Virtual Audio Device</a></td> <td>Send audio from one application to another.</td> </tr> <tr> <td><a href="https://support.apple.com/guide/audio-midi-setup/transfer-midi-information-between-apps-ams1013/mac">IAC Driver (Virtual MIDI Bus)</a></td> <td><a href="https://www.tobias-erichsen.de/software/loopmidi.html">Loop MIDI</a></td> <td>Create virtual loopback MIDI-ports to interconnect applications.</td> </tr> <tr> <td><a href="https://support.apple.com/guide/audio-midi-setup/share-midi-information-over-a-network-ams1012/mac">Virtual MIDI Network</a></td> <td><a href="https://www.tobias-erichsen.de/software/rtpmidi.html">rtpMIDI</a></td> <td>Allows MIDI applications to communicate via network with other computers.</td> </tr> </tbody> </table> <p></p> <h2 id="windows-settings"><a href="#windows-settings">Windows Settings</a></h2> <p>Mainly, how to remove annoying features and settings from Windows.</p> <table> <thead> <tr> <th>Setting</th> <th>Article URL</th> <th>Commentary</th> </tr> </thead> <tbody> <tr> <td>Optimize Windows settings for Audio</td> <td><a href="https://zoomcorp.com/documents/2116/OptimizeWindows10_E.pdf">https://zoomcorp.com/documents/2116/OptimizeWindows10_E.pdf</a></td> <td>WARNING: Be careful NOT to disable Microsoft services, this can lock you out of the computer.</td> </tr> <tr> <td>Turn Off System Sounds</td> <td><a href="https://www.thewindowsclub.com/turn-off-notification-system-sounds-windows-10">https://www.thewindowsclub.com/turn-off-notification-system-sounds-windows-10</a></td> <td>¬†</td> </tr> <tr> <td>End Task in Taskbar Context Menu</td> <td><a href="https://www.thewindowsclub.com/how-to-show-end-task-item-in-the-taskbar-context-menu">https://www.thewindowsclub.com/how-to-show-end-task-item-in-the-taskbar-context-menu</a></td> <td>Great alternative to <code class="language-plaintext highlighter-rouge">Cmd + Q</code> or Force Quit.</td> </tr> <tr> <td>Enable AutoEndTasks</td> <td><a href="https://www.thewindowsclub.com/how-to-enable-or-disable-autoendtasks-in-windows">https://www.thewindowsclub.com/how-to-enable-or-disable-autoendtasks-in-windows</a></td> <td>Automatically closes an unresponsive program.</td> </tr> <tr> <td>Disable News and Interests</td> <td><a href="https://www.thewindowsclub.com/enable-or-disable-news-and-interests-on-taskbar">https://www.thewindowsclub.com/enable-or-disable-news-and-interests-on-taskbar</a></td> <td>¬†</td> </tr> <tr> <td>Disable Search Highlights</td> <td><a href="https://www.thewindowsclub.com/how-to-disable-search-highlights-in-windows">https://www.thewindowsclub.com/how-to-disable-search-highlights-in-windows</a></td> <td>¬†</td> </tr> </tbody> </table> <p></p> <h2 id="other-useful-apps"><a href="#other-useful-apps">Other useful Apps</a></h2> <table> <thead> <tr> <th>App Title (Link)</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td><a href="https://www.oo-software.com/en/shutup10">O&amp;O Shutup 10++</a></td> <td>Disable telemetry tool for Windows 10 &amp; 11.</td> </tr> <tr> <td><a href="https://www.bleachbit.org/">Bleachbit</a></td> <td>Clean Your System and Free Disk Space.</td> </tr> <tr> <td><a href="https://mularahul.github.io/keyviz/">Keyviz</a></td> <td>Free and open-source software for visualizing keystrokes.</td> </tr> <tr> <td><a href="https://openboard.ch/index.en.html">OpenBoard</a></td> <td>Interactive whiteboard for schools and universities</td> </tr> <tr> <td><a href="https://obsproject.com/">OBS</a></td> <td>Software for video recording and live-streaming.</td> </tr> </tbody> </table> <blockquote> <p><em>I discovered many of these apps through my favorite website for searching FOSS Software: <a href="https://alternativeto.net/">https://alternativeto.net/</a>. If you have any recommendations, let me know.</em></p> </blockquote>]]></content><author><name></name></author><category term="windows"/><category term="ux"/><category term="workflow"/><summary type="html"><![CDATA[Apps and Settings to make Windows feel more like macOS.]]></summary></entry><entry><title type="html">Pure Data FAQ</title><link href="https://mikemorenodsp.github.io/posts/pure-data-faq/" rel="alternate" type="text/html" title="Pure Data FAQ"/><published>2022-06-29T00:00:00+00:00</published><updated>2022-06-29T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/pure-data-faq</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/pure-data-faq/"><![CDATA[<p>These are the Frequently Asked Questions on the <a href="https://discord.gg/aNd8RrT">Pure Data Discord Server</a>.</p> <ul> <li><a href="#1-what-version-of-pure-data-should-i-download">1. What version of Pure Data should I download?</a></li> <li><a href="#2-how-can-i-change-the-color-scheme">2. How can I change the color scheme?</a></li> <li><a href="#3-what-tutorials-or-books-do-you-recommend-for-beginners">3. What tutorials or books do you recommend for beginners?</a></li> <li><a href="#4-how-do-i-download-and-install-external-libraries">4. How do I download and install external libraries?</a></li> <li><a href="#5-which-libraries-should-i-download">5. Which libraries should I download?</a></li> <li><a href="#6-how-do-i-send-audio-or-midi-from-pd-to-another-application">6. How do I send audio or MIDI from Pd to another application?</a></li> <li><a href="#7-how-can-i-render-the-audio-from-a-pd-patch-in-offline-mode">7. How can I render the audio from a pd patch in offline mode?</a></li> <li><a href="#8-gem-does-not-work-on-my-macos">8. Gem does not work on my macOS</a></li> </ul> <p>Check other questions on the official Pd FAQ: <a href="https://puredata.info/docs/faq">https://puredata.info/docs/faq</a></p> <h2 id="1-what-version-of-pure-data-should-i-download">1. What version of Pure Data should I download?</h2> <p>There are different distributions (distros) of Pure Data, but the most update and compatible of all is the vanilla version. Personally, I would recommend Pd next.</p> <ul> <li><a href="https://puredata.info/downloads/pure-data">Pure Data Vanilla</a> - The Original, but you can always customize it by installing third party libraries, which is easy with the included package management system (deken).</li> <li><a href="https://plugdata.org/">Plug Data</a> - Pd as a plug-in and standalone app. Enhanced UI and UX (similar to that of Max MSP). It comes with two pre-installed libraries (cyclone and else). Recommended for beginners.</li> <li><a href="https://github.com/sebshader/pdnext/releases">Pd Next</a> - Color themed Pd. Pd vanilla but with color customization.</li> <li><a href="https://puredata.info/downloads/ceammc">Pd CEAMMC</a> - Fully compatible with Pd Vanilla, but with enhanced UI tweaks and pre-installed with the CEAMMC library which contains plenty of audio and UI objects.</li> <li><a href="https://puredata.info/downloads/pd-extended/releases/0.42.5">Pd Extended</a> - Dead/Outdated since 2010, but recognized for its ease of use and pre-installed libraries.</li> <li><a href="https://puredata.info/downloads/purr-data">Purr Data</a> - Extended‚Äôs successor. It comes pre-installed libraries, improved appearance and experience. Note: It has some incompatibilities/differences with vanilla and can be glitchy at times.</li> </ul> <h2 id="2-how-can-i-change-the-color-scheme">2. How can I change the color scheme?</h2> <ul> <li>The easiest route would be to download/install <a href="https://github.com/sebshader/pdnext/releases">Pd-next</a> and then download its <a href="https://github.com/sebshader/color-themes-plugin">color theme plug-in</a>, just follow the instructions.</li> <li>On Purr Data you can change the color scheme by going to Preferences &gt; GUI &gt; GUI Preset.</li> <li>On Pd vanilla, you can only change the background color by going to pdtk_canvas.tcl (Applications/Pd/Contents/Resources/tcl) and change the value in line 121 to any hexadecimal color:</li> </ul> <div class="language-tcl highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-background #fcfc7e
</code></pre></div></div> <h2 id="3-what-tutorials-or-books-do-you-recommend-for-beginners">3. What tutorials or books do you recommend for beginners?</h2> <ul> <li><a href="http://pd-tutorial.com/">Programming Electronic Music in Pd</a> - (Online book) It begins with explanations of basic programming and acoustic principles, then gradually builds up to the more advanced electronic music processing techniques</li> <li><a href="http://archive.flossmanuals.net/pure-data/">FLOSS Manuals Pure Data</a> - (Online book) Learn media programming with Pd from the beginning, it covers audio, video, music, sensors, and more.</li> <li><a href="https://www.youtube.com/playlist?list=PL12DC9A161D8DC5DC">Cheetomoskeeto‚Äôs Pd Lectures</a> - (Videos) although a bit outdated, these still hold up as great starting tutorials for Pd with a good pace.</li> <li><a href="https://www.youtube.com/playlist?list=PLyFkFo29zHvD4eRftIAjcLqIXCtSo7w8g">Sound Simulator‚Äôs Pd tutorials</a> - (Videos) Great edited beginner tutorial videos to get started with Pd on sound synthesis, sequencing and generative music.</li> <li><a href="https://www.youtube.com/playlist?list=PL7w4cOVVxL6FB_mmJ77C6fdV8G6L4zDut">Simon Hutchinson‚Äôs Pd Tutorials</a> - (Videos) Easy-to-follow tutorials, targeted to musicians with no programming experience necessary.</li> <li><a href="https://www.youtube.com/channel/UCeemOWHUMcAc5vIPI9x05PQ/videos">Really Useful Plugins‚Äô Pd Tutorials</a> - (Videos) Tutorials on sound synthesis focused on emulating synthesizers and drum machines.</li> <li><a href="https://www.youtube.com/playlist?list=PLuxj2jXSuTvvqYcDLJ-poN-JxvqX0wq-m">QCGInteractiveMusic‚Äôs Pd Tutorials</a> - (Videos) Lengthy tutorial series about different synthesis and audio processing techniques.</li> <li>Pure Data‚Äôs Help Browser: Pd &gt; Help &gt; Browser - (Patches) included in every Pd distribution, these cover the basics and more advanced patches on different topics.</li> </ul> <p>For more intermediate or advanced users:</p> <ul> <li><a href="https://github.com/porres/Live-Electronics-Tutorial">Live Electronics Tutorial</a> - (Patches) A more advanced but in depth tutorial on the theory and practice of Live Electronics and computer music, synthesis/DSP (digital Signal Processing).</li> <li><a href="http://msp.ucsd.edu/techniques.htm">The Theory and Technique of Electronic Music</a> - (Online book) From the creator of Pure Data, a more mathematical view into Pure data, includes patches.</li> <li><a href="https://mitpress.mit.edu/books/designing-sound">Designing Sound</a> - Paid book about procedural audio and how to create sound effects using Pure Data.</li> <li><a href="https://www.contemponet.com/shop/pure-data-electronic-music-and-sound-design-1/">Pure Data: Electronic Music and Sound Design</a> - Paid book on sound synthesis and signal processing.</li> </ul> <p>More tutorials here: <a href="https://puredata.info/docs/tutorials/">https://puredata.info/docs/tutorials/</a></p> <h2 id="4-how-do-i-download-and-install-external-libraries">4. How do I download and install external libraries?</h2> <p>Download them using deken (Pd‚Äôs integrated package management system):</p> <ol> <li>Open Pure Data.</li> <li>Click on the ‚ÄúHelp‚Äù menu, then on ‚ÄúFind externals‚Ä¶‚Äù.</li> <li>Type the name of the library or an object. Example: ‚Äúcyclone‚Äù.</li> <li>Click ‚ÄúSearch‚Äù or type Enter.</li> <li>Click on the first result. This should download the library to your externals‚Äô directory.</li> </ol> <p>Or download them via GitHub / GitLab and place the folder on your external‚Äôs directory.</p> <p>To install it, make sure you have the library‚Äôs folder on your Path:</p> <ol> <li>Open Pd.</li> <li>Click on ‚ÄúPreferences‚Äù &gt; ‚ÄúPath‚Ä¶‚Äù.</li> <li>If your folder library isn‚Äôt set click on ‚ÄúNew‚Ä¶‚Äù and add your folder. Example: ‚Äú~/Documents/Pd/externals/cyclone‚Äù.</li> <li>Click ‚ÄúOk‚Äù or type Enter.</li> </ol> <h2 id="5-which-libraries-should-i-download">5. Which libraries should I download?</h2> <p>Depends on the nature of your project. Only abstraction libraries are compatible for embeddable projects (DAW plug-ins, web, mobile app, etc.), since they are made solely with vanilla objects. External libraries on the other hand are more CPU efficient, but most of them work only in Pd.</p> <p>Here are the usually most downloaded libraries:</p> <ul> <li><a href="https://github.com/porres/pd-cyclone">cyclone</a> - (externals) a set of Pd objects cloned from Max/MSP.</li> <li><a href="https://github.com/porres/pd-else">else</a> - (externals) big library for a complete computer music experience.</li> <li><a href="https://github.com/uliss/pure-data">ceammc</a> - (externals) general purpose library with plenty of GUI objects, synthesis and effects.</li> <li><a href="https://git.iem.at/pd/zexy">zexy</a> - (externals) the Swiss army knife for Pure Data.</li> <li><a href="https://git.iem.at/pd/iemlib">iemlib</a> - (externals) collection of general purpose objects and filters.</li> <li><a href="https://github.com/wbrent/timbreIDLib">timbreID</a> - (externals) audio analysis for Pure Data.</li> <li><a href="https://github.com/cooperbaker/Pd-Spectral-Toolkit">spectralToolkit</a> - (externals) Spectral Signal Processing Toolkit.</li> <li><a href="https://github.com/umlaeute/Gem">gem</a> - (externals) library for creating visuals using openGL.</li> <li><a href="https://github.com/cuinjune/Ofelia">ofxOfelia</a> - (externals) library for creating visuals with openFrameworks and Lua.</li> <li><a href="https://github.com/solipd/AudioLab">audiolab</a> - (abstractions) library for electroacoustic composition and live electronics.</li> <li><a href="https://github.com/enzienaudio/heavylib">heavylib</a> - (abstractions) heavy (hvcc) compatible abstractions.</li> <li><a href="https://github.com/dotmmb/mmb">mmb</a> - (abstractions)¬† library with anti aliased oscillators, filters, etc.</li> <li><a href="https://github.com/MikeMorenoDSP/pd-mkmr">mkmr</a> - (abstractions) synthesized instruments library.</li> </ul> <p>You can also search objects or libraries and download via the deken website: <a href="http://deken.puredata.info/">http://deken.puredata.info/</a></p> <h2 id="6-how-do-i-send-audio-or-midi-from-pd-to-another-application">6. How do I send audio or MIDI from Pd to another application?</h2> <p>Here are some paid and free options for different OS:</p> <p>Audio:</p> <ul> <li><a href="https://staticz.com/soundsiphon/">Sound Siphon</a> ($50 USD / macOS)</li> <li><a href="https://rogueamoeba.com/loopback/">Loopback</a> ($115 USD / macOS)</li> <li><a href="https://github.com/mattingalls/Soundflower/releases">SoundFlower</a> (Free / macOS)</li> <li><a href="https://github.com/ExistentialAudio/BlackHole/releases">BlackHole</a> (Free / macOS)</li> <li><a href="https://vac.muzychenko.net/en/index.htm">Virtual Audio Cable</a> ($30 USD / Windows)</li> <li><a href="https://vb-audio.com/Cable/">VB-Audio Virtual Cable</a> (Free / Windows)</li> <li><a href="https://vb-audio.com/Voicemeeter/index.htm">VoiceMeeter</a> (Free / Windows)</li> <li><a href="https://jackaudio.org/">Jack</a> (Free / cross-platform)</li> <li><a href="https://gitlab.freedesktop.org/pipewire/helvum">Helvum</a> (Free / Linux)</li> </ul> <p>MIDI:</p> <ul> <li><a href="https://help.ableton.com/hc/en-us/articles/209774225-Setting-up-a-virtual-MIDI-bus">Virtual MIDI Bus</a> (FREE / macOS)</li> <li><a href="https://www.tobias-erichsen.de/software/loopmidi.html">Loop MIDI</a> (FREE / Windows)</li> <li><a href="https://jackaudio.org/">Jack</a> (Free / Linux)</li> </ul> <h2 id="7-how-can-i-render-the-audio-from-a-pd-patch-in-offline-mode">7. How can I render the audio from a pd patch in offline mode?</h2> <p>Send the message <code class="language-plaintext highlighter-rouge">fast-forward $1</code> to a <code class="language-plaintext highlighter-rouge">send pd</code> object with the amount of milliseconds you want to render. More info here: <a href="https://github.com/porres/Live-Electronics-Tutorial/blob/master/Examples/Part.01-The.Basics/01-Pd.Quickstart/3.fast-forward.pd">3.fast-forward.pd</a></p> <h2 id="8-gem-does-not-work-on-my-macos">8. Gem does not work on my macOS</h2> <p>Try an <a href="https://msp.ucsd.edu/Software/">0.51-3 or an older version of pd vanilla</a> and use <a href="https://support.apple.com/en-us/102527">Rosetta</a>. If none of that worked, search for your issue on <a href="https://github.com/umlaeute/Gem/issues">Gem‚Äôs GitHub repository</a>.</p>]]></content><author><name></name></author><category term="pure data"/><summary type="html"><![CDATA[Frequently Asked Questions about Pure Data.]]></summary></entry><entry><title type="html">Basic waveforms in pd vanilla</title><link href="https://mikemorenodsp.github.io/posts/basic-waveforms/" rel="alternate" type="text/html" title="Basic waveforms in pd vanilla"/><published>2022-03-28T00:00:00+00:00</published><updated>2022-03-28T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/basic-waveforms</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/basic-waveforms/"><![CDATA[<p>In this post, I try to detail how to create the ‚Äúbasic‚Äù waveforms used for subtractive synthesis using only Pd vanilla objects (without <code class="language-plaintext highlighter-rouge">expr~</code>).</p> <h2 id="sawtooth--ramp-wave">Sawtooth / Ramp wave</h2> <p>The Base for all our waveforms will be the <code class="language-plaintext highlighter-rouge">phasor~</code> object. Since its output is already a ramp waveform there isn‚Äôt much to do other than normalize it, because its values range from 0 to 1 when audio signals at their full amplitude should be bipolar ranging from -1 to 1.</p> <p>To change the ramp for a sawtooth waveform, phase inversion is needed. This can be achieved by multiplying the resulting signal by -1.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/basic-waveforms/sawtooth-480.webp 480w,/assets/img/posts/basic-waveforms/sawtooth-800.webp 800w,/assets/img/posts/basic-waveforms/sawtooth-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/basic-waveforms/sawtooth.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 188px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="square--pulse-wave-by-clipping">Square / Pulse wave by clipping</h2> <p>One way to make a square wave with a variable pulse width can be done by offsetting and distorting (clipping) a <code class="language-plaintext highlighter-rouge">phasor~</code>‚Äôs output.</p> <p>The clipping stage here is similar to a <code class="language-plaintext highlighter-rouge">if/else statement</code>, where if the signal is more than 0 it will return 1, else it will return -1. This is thanks to the <code class="language-plaintext highlighter-rouge">*~ 1000</code> multiplication that blows up any number to the extreme and <code class="language-plaintext highlighter-rouge">clip~ -1 1</code> limits those values to -1 and 1.</p> <p>The offset has a range of 0 to 1 and controls the pulse width of the waveform. For example: when it is set to 0.5 the output of <code class="language-plaintext highlighter-rouge">-~</code> will be 50% of the time on negative values and 50% on positive values, this results in a square wave. If it‚Äôs set to 0.25, it will be 25% on negative values and 75% on positive values, this results in a pulse wave.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/basic-waveforms/square-480.webp 480w,/assets/img/posts/basic-waveforms/square-800.webp 800w,/assets/img/posts/basic-waveforms/square-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/basic-waveforms/square.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 260px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="square--pulse-wave-by-phase-shift">Square / Pulse wave by phase shift</h2> <p>Another way to make a square wave is to shift the phase of a parallel copy of the <code class="language-plaintext highlighter-rouge">phasor~</code> and subtract it from the original (<code class="language-plaintext highlighter-rouge">-~</code>). This can be achieved by offsetting the signal with a <code class="language-plaintext highlighter-rouge">+~</code> object and send that to a <code class="language-plaintext highlighter-rouge">wrap~</code> object.</p> <p>Depending on the offset is the amount of time, the signal will cancel itself, resulting in a square or pulse wave.</p> <p>After that the signal gets normalized by summing the pulse width back into the signal (<code class="language-plaintext highlighter-rouge">+~ 0.5</code>), multiplying that by 2 (<code class="language-plaintext highlighter-rouge">*~ 2</code>) and subtracting 1 (<code class="language-plaintext highlighter-rouge">-~ 1</code>).</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/basic-waveforms/square-2-480.webp 480w,/assets/img/posts/basic-waveforms/square-2-800.webp 800w,/assets/img/posts/basic-waveforms/square-2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/basic-waveforms/square-2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 295px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="triangle-wave">Triangle wave</h2> <p>One of the most simple ways to make a triangle wave out of a <code class="language-plaintext highlighter-rouge">phasor~</code> is to invert half the cycle of its output.</p> <p>This can be done by subtracting 0.5 to the <code class="language-plaintext highlighter-rouge">phasor~</code>‚Äôs output and sending that through a <code class="language-plaintext highlighter-rouge">abs~</code> object which replaces negative values to positive values. The result is a triangle wave that ranges from 0 to 0.5.</p> <p>Finally, normalization is done by multiplying by 4 (<code class="language-plaintext highlighter-rouge">*~ 4</code>) and subtracting 1 (<code class="language-plaintext highlighter-rouge">-~ 1</code>).</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/basic-waveforms/triangle-480.webp 480w,/assets/img/posts/basic-waveforms/triangle-800.webp 800w,/assets/img/posts/basic-waveforms/triangle-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/basic-waveforms/triangle.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 269px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="implementation">Implementation</h2> <p>Looking at the conventional subtractive synthesizer structure, it is notorious to see that a single oscillator can produce several waveforms, but it only has one pitch control. That being said, it‚Äôs best practice using a single <code class="language-plaintext highlighter-rouge">phasor~</code> object with all the wave shaping processes in parallel instead of one <code class="language-plaintext highlighter-rouge">phasor~</code> per waveform. This way, we can achieve the ‚Äúone pitch control, several waveforms‚Äù paradigm one can often see in synthesizers.</p> <p>Another thing one can add to save some CPU is to use the <code class="language-plaintext highlighter-rouge">switch~</code> object to turn off the DSP on the wave-shaper‚Äôs sub-patches that are not in use.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/basic-waveforms/best-practice-480.webp 480w,/assets/img/posts/basic-waveforms/best-practice-800.webp 800w,/assets/img/posts/basic-waveforms/best-practice-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/basic-waveforms/best-practice.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 683px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="aliasing">Aliasing</h2> <p>It is important to know these waveforms are not band limited, therefore aliasing will be present throughout the oscillator‚Äôs bandwidth, specially on the higher frequencies.</p> <p>This sounds notoriously digital, but it can be reduced either by oversampling &amp; filtering or other techniques such as polyblep.</p> <p>Here are some libraries with band-limited oscillators:</p> <ul> <li><a href="https://github.com/enzienaudio/heavylib">heavylib library (vanilla)</a></li> <li><a href="https://github.com/dotmmb/mmb">mmb library(vanilla)</a></li> <li><a href="https://github.com/MikeMorenoDSP/pd-mkmr">mkmr library (vanilla)</a></li> <li><a href="https://github.com/porres/Camomile-ELSE/releases">else library (externals)</a></li> </ul> <h2 id="download">Download</h2> <p style="text-align: center;"><a href="/assets/patches/basic-waveforms.pd">Download Patch</a></p> <h2 id="references--further-reading">References &amp; Further Reading</h2> <ul> <li><a href="https://forum.pdpatchrepo.info/topic/6734/making-basic-waveforms-from-a-phasor">Pure Data Forum - Making Basic waveforms from a phasor</a></li> <li><a href="http://drymonitis.me/wp-content/uploads/2016/02/making_VCOs_in_pure_data.pdf">Alexandros Drymonitis - Making VCOs in Pure Data</a></li> <li><a href="http://www.pd-tutorial.com/english/ch03s05.html">Johannes Kreidler - Wave shaping</a></li> <li><a href="http://msp.ucsd.edu/techniques/latest/book-html/node184.html">Miller Puckette - Classical waveforms</a></li> <li><a href="http://floss.booktype.pro/pure-data/generating-waveforms/">FLOSS Manual - Generating waveforms</a></li> </ul>]]></content><author><name></name></author><category term="oscillators"/><category term="dsp"/><category term="pure data"/><category term="synthesis"/><summary type="html"><![CDATA[How to create basic synthesizer waveforms.]]></summary></entry><entry><title type="html">Realistic drums with karplus-strong synthesis</title><link href="https://mikemorenodsp.github.io/posts/Realistic-drums-with-karplus-strong-synthesis/" rel="alternate" type="text/html" title="Realistic drums with karplus-strong synthesis"/><published>2022-03-13T00:00:00+00:00</published><updated>2022-03-13T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/Realistic-drums-with-karplus-strong-synthesis</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/Realistic-drums-with-karplus-strong-synthesis/"><![CDATA[<p><code class="language-plaintext highlighter-rouge">[mymembrane~]</code> is a Pure Data instrument focused on the creation of acoustic drum-like sounds. It started as an attempt at creating an extended karplus-strong algorithm, but ended up resembling a snare drum due to the inharmonicity caused by the all-pass filter. In this document I will explain its components and how it works.</p> <h2 id="1-parameters">1. Parameters</h2> <p>First, let‚Äôs take an overview of the available parameters for this instrument:</p> <ul> <li><strong>Frequency:</strong> sets the fundamental frequency of the delay-line.</li> <li><strong>Feedback:</strong> sets the feedback amount of the delay-line.</li> <li><strong>Damping:</strong> controls the cutoff frequency for the low-pass filter in the feedback section.</li> <li><strong>All-pass Frequency:</strong> sets the frequency for the all-pass filter.</li> <li><strong>All-pass Gain:</strong> controls the amount of feedback gain in the all-pass filter.</li> <li><strong>Pitch Bend Decay:</strong> sets the decay time for the pitch envelope modulating the delay line‚Äôs frequency and the all-pass frequency.</li> <li><strong>Noise Level:</strong> controls the amount of filtered white noise in the mix.</li> </ul> <h2 id="2-excitation">2. Excitation</h2> <p>The excitation source for this instrument is a combination of a single sine-wave cycle and a burst of filtered white noise. The single sine-wave cycle can be synthesized using a high precision audio ramp generator object (<code class="language-plaintext highlighter-rouge">vline~</code>) going through a cosine waveshaper (<code class="language-plaintext highlighter-rouge">cos~</code>) with an offset. It is important that the ramp has a length in milliseconds equal to one period of the fundamental frequency, so the same waveform can be repeated through the delay-line. Then, the ramp‚Äôs output can act as an amplitude envelope for the filtered white noise to add more harmonic content to the excitation source. The result will make the algorithm sound less like a string and more like a resonator with a clearer perception of the fundamental frequency.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/01-Excitation_Source-480.webp 480w,/assets/img/posts/karplus-drums/01-Excitation_Source-800.webp 800w,/assets/img/posts/karplus-drums/01-Excitation_Source-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/01-Excitation_Source.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 470px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="3-karplus-strong-string-synthesis">3. Karplus-Strong string synthesis</h2> <p>The excitation waveform can then be used for the karplus-strong algorithm. This consists of a delay-line looped through a one-pole low-pass filter. This algorithm provides two parameters for the instrument: feedback amount and damping frequency. The first changes the amplitude in the feedback section which consequently affects the decay-time. The damping frequency controls the cutoff frequency of the low-pass filter therefore affecting both the ‚Äúbrightness‚Äù and decay-time. In order to extend the frequency range it is necessary to have a delay size over 50 ms and put a <code class="language-plaintext highlighter-rouge">block~ 1</code> object inside the delay-line subpatch to force Pure Data to compute samples one by one.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/02-Karplus-Strong-1-480.webp 480w,/assets/img/posts/karplus-drums/02-Karplus-Strong-1-800.webp 800w,/assets/img/posts/karplus-drums/02-Karplus-Strong-1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/02-Karplus-Strong-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 455px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/02-Karplus-Strong-2-480.webp 480w,/assets/img/posts/karplus-drums/02-Karplus-Strong-2-800.webp 800w,/assets/img/posts/karplus-drums/02-Karplus-Strong-2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/02-Karplus-Strong-2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 488px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="4-all-pass-filter">4. All-pass filter</h2> <p>In this instrument, the all-pass filter is the most important building block for creating an inharmonic drum-like sound. The type of all-pass filter being used is a Schroeder allpass comb filter, which is made by cascading a feedback comb-filter with a feedforward comb-filter. There are two parameters for this filter: the all-pass frequency and the all-pass gain. The all-pass frequency controls the delay time being read on the all-pass filter and affects the inharmonicity depending on the ratio between the delay-line‚Äôs frequency and the all-pass frequency. The all-pass gain controls the amount of the feedback gain in the all-pass filter and ranges from -1 to 1 to avoid infinite feedback. The resulting sound already sounds like a drum membrane being hit, but it is possible to add more modulations and layers to enhance its features.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/03-All-pass_Filter-1-480.webp 480w,/assets/img/posts/karplus-drums/03-All-pass_Filter-1-800.webp 800w,/assets/img/posts/karplus-drums/03-All-pass_Filter-1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/03-All-pass_Filter-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 536px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/03-All-pass_Filter-2-480.webp 480w,/assets/img/posts/karplus-drums/03-All-pass_Filter-2-800.webp 800w,/assets/img/posts/karplus-drums/03-All-pass_Filter-2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/03-All-pass_Filter-2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 789px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="5-pitch-bend">5. Pitch Bend</h2> <p>Using a ramp generator to modulate the frequency reinforces the drum-like quality to the sound. Additionally, the same ramp can be set to enhance the attack by distorting the first few milliseconds. Although the only parameter for this section is the ramp‚Äôs decay time, changing the ramp‚Äôs curve and the amount of frequency modulation will also affect the fundamental frequency perception and attack of the instrument.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/04-Pitch-Bend-1-480.webp 480w,/assets/img/posts/karplus-drums/04-Pitch-Bend-1-800.webp 800w,/assets/img/posts/karplus-drums/04-Pitch-Bend-1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/04-Pitch-Bend-1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 646px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/04-Pitch-Bend-2-480.webp 480w,/assets/img/posts/karplus-drums/04-Pitch-Bend-2-800.webp 800w,/assets/img/posts/karplus-drums/04-Pitch-Bend-2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/04-Pitch-Bend-2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 745px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="6-snares">6. Snares</h2> <p>Finally, this instrument can be turned into a snare drum by adding snares using an envelope follower of the drum output to modulate the amplitude of a filtered white noise layer. Using a band-pass at 3 kHz to filter the white noise will provide a more credible snare sound. Changing the level of this layer can mean the difference between a snare drum sound and a regular drum.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/karplus-drums/05-Snares-480.webp 480w,/assets/img/posts/karplus-drums/05-Snares-800.webp 800w,/assets/img/posts/karplus-drums/05-Snares-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/karplus-drums/05-Snares.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 651px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="7-conclusion">7. Conclusion</h2> <p>Although <code class="language-plaintext highlighter-rouge">[mymembrane~]</code> can provide some realistic acoustic drum sounds, the parameters could be reworked for easier sound design. For example, adding real physical-modelling variables such as tension and a variety of excitation sources like different drum sticks.</p> <p>This instrument is currently available for download at the pd-mkmr repository, under the instruments folder: <a href="https://github.com/MikeMorenoDSP/pd-mkmr">https://github.com/MikeMorenoDSP/pd-mkmr</a> and a demo can be heard here: <a href="https://youtu.be/SpC3t1EVF_Q">https://youtu.be/SpC3t1EVF_Q</a>.</p> <h2 id="references">References</h2> <ul> <li><a href="https://www.uaudio.com/blog/allpass-filters/">Universal Audio - Allpass Filters</a></li> <li><a href="https://ccrma.stanford.edu/~jos/pasp/Allpass_Two_Combs.html">Julius O. Smith - Allpass Two Combs</a></li> <li><a href="https://ccrma.stanford.edu/~jos/pasp/Extended_Karplus_Strong_Algorithm.html">Julius O. Smith - Extended Karplus Strong Algorithm</a></li> </ul>]]></content><author><name></name></author><category term="documentation"/><category term="dsp"/><category term="physical modelling"/><category term="synthesis"/><summary type="html"><![CDATA[Documentation on [mymembrane~], an algorithm to synthesize realistic drum sounds.]]></summary></entry><entry><title type="html">Low-effort equal-loudness oscillator</title><link href="https://mikemorenodsp.github.io/posts/equal-loudness-oscillator/" rel="alternate" type="text/html" title="Low-effort equal-loudness oscillator"/><published>2022-02-04T00:00:00+00:00</published><updated>2022-02-04T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/equal-loudness-oscillator</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/equal-loudness-oscillator/"><![CDATA[<p>An attempt to make the loudness of an oscillator sound the same at all frequencies.</p> <p>Amplitude is set so that the power spectral density is inversely proportional to the frequency of the signal (Similar to Pink Noise).</p> <blockquote> <p>pow = 1/f</p> </blockquote> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/equal-loudness-oscillator-480.webp 480w,/assets/img/posts/equal-loudness-oscillator-800.webp 800w,/assets/img/posts/equal-loudness-oscillator-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/equal-loudness-oscillator.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 712px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h3 id="download">Download</h3> <div style="text-align: center;"> <a href="/assets/patches/equal-loudness-oscillator.pd">Download Patch</a> </div> <h3 id="references">References</h3> <ul> <li><a href="https://en.wikipedia.org/wiki/Pink_noise">https://en.wikipedia.org/wiki/Pink_noise</a></li> <li><a href="https://en.wikipedia.org/wiki/Equal-loudness_contour">https://en.wikipedia.org/wiki/Equal-loudness_contour</a></li> <li><a href="https://git.iem.at/pd/iemmatrix">iemmatrix‚Äôs mtx_phon_curve</a></li> </ul>]]></content><author><name></name></author><category term="synthesis"/><category term="dsp"/><category term="oscillators"/><category term="pure data"/><summary type="html"><![CDATA[An attempt to make the loudness of an oscillator sound the same at all frequencies.]]></summary></entry><entry><title type="html">EP-MK1 Documentation</title><link href="https://mikemorenodsp.github.io/posts/documentation-ep-mk1/" rel="alternate" type="text/html" title="EP-MK1 Documentation"/><published>2019-11-12T00:00:00+00:00</published><updated>2019-11-12T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/documentation-ep-mk1</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/documentation-ep-mk1/"><![CDATA[<p>EP-MK1 is a synthesized electric piano made with Pure Data and Camomile.</p> <p>The resulting sound is a combination of four layers:</p> <ul> <li><strong>Hammer Layer</strong>: the excitation source for the tone bar and tine layer.</li> <li><strong>Tone Bar Layer</strong>: the main component, a resonator filter oscillating at the fundamental frequency.</li> <li><strong>Tine Layer</strong>: two resonators with user-defined frequency ratios for each filter.</li> <li><strong>Pickup Layer</strong>: A sum of the three previous layers through a filtered nonlinear distortion.</li> </ul> <h2 id="hammer-layer">Hammer Layer</h2> <p>The <strong>hammer layer</strong> was synthesized using a high-precision audio ramp generator object <code class="language-plaintext highlighter-rouge">vline~</code> going through a cosine waveshaper <code class="language-plaintext highlighter-rouge">cos~</code>. The result is a pulse with a length in milliseconds equal to one period of our fundamental frequency.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/ep-mk1/01-Hammer-480.webp 480w,/assets/img/posts/ep-mk1/01-Hammer-800.webp 800w,/assets/img/posts/ep-mk1/01-Hammer-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/ep-mk1/01-Hammer.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 284px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="tone-bar-layer">Tone Bar Layer</h2> <p>The tone bar‚Äôs only component is a resonant band-pass filter with constant skirt, better known as a <strong>resonator</strong> in modal synthesis. Sending a source of excitation to the resonator will output a decaying sine wave oscillating at the filter‚Äôs frequency. The sine wave‚Äôs decay time is determined by the filter‚Äôs resonance (Q).</p> <p>In this instrument the abstraction <code class="language-plaintext highlighter-rouge">b.resonator~</code> from the mkmr library is being used, but there are plenty of resonators to choose from for Pure Data:</p> <ul> <li><code class="language-plaintext highlighter-rouge">resonator~</code> from the else library: <a href="https://github.com/porres/pd-else/releases">Download at GitHub</a> or Deken</li> <li><code class="language-plaintext highlighter-rouge">filtercoeff.mmb</code> or <code class="language-plaintext highlighter-rouge">filtercoeff.mmb~</code> set at ‚Äúresonant‚Äù from the mmb library: <a href="https://github.com/dotmmb/mmb">Download at GitHub</a></li> <li><code class="language-plaintext highlighter-rouge">hv.filter</code> set at ‚Äúbandpass 1‚Äù from the heavy library: <a href="https://github.com/enzienaudio/heavylib">Download at GitHub</a></li> </ul> <p>The inlets parameters for <code class="language-plaintext highlighter-rouge">b.resonator~</code> are the following:</p> <ol> <li>signal - signal to be filtered or excite the resonator.</li> <li>float - sets the central cutoff frequency in hertz.</li> <li>float - sets the filter‚Äôs resonance (Q).</li> <li>bang - reinitialize the filter‚Äôs internal state.</li> </ol> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/ep-mk1/02-Tone-Bar-480.webp 480w,/assets/img/posts/ep-mk1/02-Tone-Bar-800.webp 800w,/assets/img/posts/ep-mk1/02-Tone-Bar-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/ep-mk1/02-Tone-Bar.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 461px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="tine-layer">Tine Layer</h2> <p>The bell-like sound in an Electric Piano comes from the <strong>tine layer</strong> which is composed of two resonators being excited by a filtered hammer. First, the hammer goes through a 2-pole high-pass filter to remove any unwanted low frequency content like thumps or clicks. Then, the resonator‚Äôs frequency ratios are set to 7 and 20 to generate those harmonics respectively. Finally, a volume parameter is recommended to control the level of ‚Äúbrightness‚Äù.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/ep-mk1/03-Tine-Layer-480.webp 480w,/assets/img/posts/ep-mk1/03-Tine-Layer-800.webp 800w,/assets/img/posts/ep-mk1/03-Tine-Layer-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/ep-mk1/03-Tine-Layer.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 490px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="pickup-layer">Pickup Layer</h2> <p>The pickup model is a parallel layer with nonlinear distortion. First, the sum of the three layers are sent to a 2-pole low-pass filter to get a cleaner tone on the higher notes. Then, the signal goes through a soft clipper which then goes a waveshaping process to enhance the even harmonics with the symmetry parameter. Finally, it gets normalized and rectified using a high-pass filter fundamental frequency.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/ep-mk1/04-Pickup-Layer-480.webp 480w,/assets/img/posts/ep-mk1/04-Pickup-Layer-800.webp 800w,/assets/img/posts/ep-mk1/04-Pickup-Layer-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/ep-mk1/04-Pickup-Layer.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 466px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="midi-implementation">MIDI Implementation</h2> <p>Lastly, MIDI is implemented to control the fundamental frequency, the hammer‚Äôs amplitude and the resonator‚Äôs decay and release time. It is important to reset the amplitude by setting it to zero on the first millisecond and then back to one on the second while simultaneously triggering the hammer and resetting the filters. This will avoid unwanted clicks and keep consistency at each trigger. Adding velocity control to the hammer‚Äôs amplitude will provide varied dynamics that affect the amount of harmonics produced by the pickup layer.</p> <div class="row" style="text-align: center;"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/posts/ep-mk1/05-MIDI-Implementation-480.webp 480w,/assets/img/posts/ep-mk1/05-MIDI-Implementation-800.webp 800w,/assets/img/posts/ep-mk1/05-MIDI-Implementation-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/posts/ep-mk1/05-MIDI-Implementation.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" style=" max-width: 622px; " loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h2 id="references">References</h2> <ul> <li>Kurt James Werner. A Physically-Informed, Circuit-Bendable, Digital Model of the Roland TR-808 Bass Drum Circuit.</li> <li>Florian Pfeifle. Real-time Physical Model of a Wurlitzer and Rhodes Electric Piano. <a href="http://dafx17.eca.ed.ac.uk/papers/DAFx17_paper_79.pdf">http://dafx17.eca.ed.ac.uk/papers/DAFx17_paper_79.pdf</a></li> <li>M. Muenster and F. Pfeifle. Non-Linear Behaviour in Sound Production of the Rhodes Piano. <a href="http://www.conforg.fr/isma2014/cdrom/data/articles/000062.pdf">http://www.conforg.fr/isma2014/cdrom/data/articles/000062.pdf</a></li> <li>Kees van den Doel and Dinesh K. Pai. Modal Synthesis for Vibrating Objects. <a href="http://persianney.com/kvdoelcsubc/publications/modalpaper.pdf">http://persianney.com/kvdoelcsubc/publications/modalpaper.pdf</a></li> <li>Applied Acoustic Systems. Lounge Lizard EP-4 In Depth. <a href="https://www.applied-acoustics.com/lounge-lizard-ep-4/in-depth/">https://www.applied-acoustics.com/lounge-lizard-ep-4/in-depth/</a></li> </ul>]]></content><author><name></name></author><category term="plugins"/><category term="documentation"/><category term="synthesis"/><category term="physical modelling"/><summary type="html"><![CDATA[EP-MK1 is a synthesized electric piano made with Pure Data and Camomile.]]></summary></entry><entry><title type="html">Algorithmic Composition // Catarina (2019)</title><link href="https://mikemorenodsp.github.io/posts/algorithmic-composition-catarina/" rel="alternate" type="text/html" title="Algorithmic Composition // Catarina (2019)"/><published>2019-08-15T00:00:00+00:00</published><updated>2019-08-15T00:00:00+00:00</updated><id>https://mikemorenodsp.github.io/posts/algorithmic-composition-catarina</id><content type="html" xml:base="https://mikemorenodsp.github.io/posts/algorithmic-composition-catarina/"><![CDATA[<p>A 100% synthesized algorithmic composition made using Pure Data Vanilla 0.49-1.</p> <p>Made for the Muff Wiggler Discord Collective Album:</p> <iframe style="border: 0; width: 350px; height: 470px;" src="https://bandcamp.com/EmbeddedPlayer/album=3149671651/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/transparent=true/" seamless=""><a href="https://mwdcollective.bandcamp.com/album/un-natural">(Un)Natural by MWD</a></iframe> <p>All instruments and sounds are part of the <a href="https://github.com/MikeMorenoAudio/pd-mkmr">pd-mkmr library</a>.</p> <p><a href="https://patchstorage.com/algorithmic-composition-catarina/">Download at PatchStorage</a></p> <iframe width="853" height="480" src="https://www.youtube.com/embed/4ypHU6HKekM" frameborder="0" allowfullscreen=""></iframe>]]></content><author><name></name></author><category term="music"/><summary type="html"><![CDATA[A 100% synthesized algorithmic composition made using Pure Data Vanilla 0.49-1.]]></summary></entry></feed>